#!/usr/bin/env bash

# associative array for module properties
declare -A module
module['type']=''
module['name']=''
module['directory']=''
module['stream']=''

# creates temporary files for ui modules
#   type, name --> void
#   Modifies module array, creates temp files
function new_module() {
    module['type']="$1"
    module['name']="$2"

    # make a directory to store temporary files
    module['directory']=$( mktemp -p "${TMPDIR}" -d "${USER}_${module['type']}_${module['name']}-XXXX" ) || exit 1

    # name fifo after module name and store in temp_dir
    if [[ ! -p "${module['directory']}/${module['name']}.fifo" ]]; then
        mkfifo "${module['directory']}/${module['name']}.fifo" || exit 1
        module['stream']="${module['directory']}/${module['name']}.fifo"
    fi
}

# removes module temp files
#   void --> void
#   removes temp files
function free_module() {
    # remove the fifo
    rm "${module['stream']}"

    # remove temp fifo dir
    rmdir "${module['directory']}"
}

# returns module type
function get_module_type() {
    echo "${module['type']}"
}

# returns module name
function get_module_name() {
    echo "${module['name']}"
}

# returns module directory
function get_module_directory() {
    echo "${module['directory']}"
}

# returns module stream
function get_module_stream() {
    echo "${module['stream']}"
}
