#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# Description: Default app launcher
# Location: $HOME/.local/bin/open_program
# -----------------------------------------------------------------------------

# print relevant messaging
open_msg() {
    case "$1" in
        1)
            echo "$2 could not be started" >&2
            notify-send "Error" "$2 could not be started"

            exit 1
            ;;
        2)
            echo "$2 could not be found" >&2
            notify-send "Error" "$2 could not be found"

            exit 1
            ;;
        *)
            echo "No message type given" >&2

            exit 1
            ;;
    esac
}

# open the terminal defined by $TERMINAL
open_terminal() {
    # check if $TERMINAL is set
    if [[ -n "$TERMINAL" ]] && [[ -x "$(which $TERMINAL 2> /dev/null)" ]]; then
        "$TERMINAL" "$@" || open_msg '1' "'$TERMINAL'"

    # didn't find anything
    else
        open_msg '2' "'$TERMINAL'"
    fi

}

# open the file_manager
#   programs are prioritized in this order:
#   1. ranger
open_file_manager() {
    # check for ranger
    if [[ -x "$(which ranger 2> /dev/null)" ]]; then
        open_terminal -e ranger || open_msg '1' "'ranger'"

    # didn't find anything
    else
        open_msg '2' "'ranger'"
    fi
}

# open the music_player
#   programs are prioritized in this order:
#   1. ncmpc
open_music_player() {
    # check for ncmpc
    if [[ -x "$(which ncmpc 2> /dev/null)" ]]; then
        # ncmpc doesn't follow xdg standards so specify config file that does
        local -r config="$XDG_CONFIG_HOME/ncmpc/config"
        local -r keys="$XDG_CONFIG_HOME/ncmpc/keys"

        # check if config is readable; use it if true
        open_terminal -e ncmpc -c -f "$config" -k "$keys" || open_msg '1' "'ncmpc'"

    # didn't find anything
    else
        open_msg '2' "'ncmpc'"
    fi
}

# open the spotlight
#   programs are prioritized in this order:
#   1. rofi
open_spotlight() {
    # Source colors
    . "$HOME/.local/bin/colors"

    # check for rofi
    if [[ -x "$(which rofi 2> /dev/null)" ]]; then
        # color "bg,fg,bgalt,hlbg,hlfg"
        rofi -show run \
            -no-show-match \
            -hide-scrollbar \
            -separator-style 'none' \
            -font 'Source code pro 10' \
            -bw "$(bspc config border_width)" \
            -color-window "${background},${color8},${background}" \
            -color-normal "${background},${foreground},${background},${color7},${foreground}" \
            -color-urgent "${background},${foreground},${background},${color7},${foreground}" \
            -color-active "${background},${foreground},${background},${color7},${foreground}"

    # didn't find anything
    else
        open_msg '2' "'rofi'"
    fi
}

# open the web_browser defined by $BROWSER
open_web_browser() {
    # check for $BROWSER
    if [[ -n "$BROWSER" ]] && [[ -x "$(which $BROWSER 2> /dev/null)" ]]; then
        "$BROWSER" "$@" || open_msg '1' "'$BROWSER'"

    # didn't find anything
    else
        open_msg '2' "'$BROWSER'"
    fi
}


function main() {
    case "$1" in
        file_manager)
            open_file_manager
            ;;
        music_player)
            open_music_player
            ;;
        spotlight)
            open_spotlight
            ;;
        terminal)
            open_terminal
            ;;
        web_browser)
            open_web_browser
            ;;
        *)
            exit 1
            ;;
    esac
}

main "$@"
