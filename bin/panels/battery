#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# battery
# Description: Displays panel showing information about battery level
# -----------------------------------------------------------------------------
# Source:
#   onodera-punpun: https://github.com/onodera-punpun/dotfiles
# -----------------------------------------------------------------------------
# Requires:
#   acpi
#   xftwidth
#   dzen
# -----------------------------------------------------------------------------
# Useage:      $ sh ./battery
# -----------------------------------------------------------------------------

# Define colors
color1=$( cat $HOME/.Xresources | grep color2 | tail -c 8 )
color2=$( cat $HOME/.Xresources | grep color9 | tail -c 8 )
color3=$( cat $HOME/.Xresources | grep color7 | tail -c 8 )

# Kill old battery
pkill -f "dzen2 -title-name battery"*
sleep 0.1

# Calculate the width
count=$( xftwidth 'Source Code Pro:size=7' '[///]' )
width=$((  ${count} + 30 ))
margin=$(( ${width} + 50 ))

# Vars
threshold=15

while
    :
do
    battery_state=$( acpi --battery | cut -d ' ' -f3 | sed 's/,//' )
    percentage=$( acpi --battery | grep -o '[0-9]*%' | sed 's/%//g' )

    if [[ "${battery_state}" == "Charging" ]]; then
        battery="^fg(${color3})[^fg(${color1})++ ^fg(${color3})]"
    elif [[ ${percentage} -le ${threshold} ]]; then
        battery="^fg(${color3})[^fg(${color2})!!!^fg(${color3})]"
    elif [[ "${battery_state}" == "Discharging" ]]; then
        battery="^fg(${color3})[^fg(${color2})-- ^fg(${color3})]"
    else
        battery="^fg(${color3})[^fg(${color1})///^fg(${color3})]"
    fi

    echo "${battery}"

    sleep 30
done |

# Spawn Battery (dzen/bar)
dzen2 -title-name battery -p -geometry -${margin}+25 -fn 'Source Code Pro:size=7' -ta c -w ${width} -h 40 -e 'onstart=lower' & disown
