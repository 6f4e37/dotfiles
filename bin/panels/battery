#!/bin/bash

# -----------------------------------------------------------------------------
# battery
# Description: Displays panel showing information about battery level
# -----------------------------------------------------------------------------
# Source:
#   onodera-punpun: https://github.com/onodera-punpun/dotfiles
# -----------------------------------------------------------------------------
# Requires:
#   acpi
#   xftwidth
#   dzen
# -----------------------------------------------------------------------------
# Useage:      $ sh ./battery
# -----------------------------------------------------------------------------

# Define colors
green=$(cat $HOME/.Xresources | grep color2 | tail -c 8)
red=$(cat $HOME/.Xresources | grep color9 | tail -c 8)
grey=$(cat $HOME/.Xresources | grep color7 | tail -c 8)

# Kill old battery
pkill -f "dzen2 -title-name battery"*
sleep 0.1

# Calculate the width
count=$(xftwidth "Source Code Pro:size=7" "[///]")
width=$(expr $count + 30)
margin=$(expr $width + 50)

# Vars
threshold="15"

while true; do
    batStats=$(acpi --battery | cut -d ' ' -f3 | sed 's/,//')
    percentage=$(acpi --battery | grep -o '[0-9]*%$' | sed 's/%//g')

    if [ "$batStats" == "Charging" ]; then
        battery="^fg($grey)[^fg($green)++ ^fg($grey)]"
    elif [ "$percentage" -le "$threshold" ]; then
        battery="^fg($red)[^fg($red)!!!^fg($red)]"
        notify-send "Low Battery Warning" "PLUG IN LAPTOP NOW"
    elif [ "$batStats" == "Discharging" ]; then
        battery="^fg($grey)[^fg($red)-- ^fg($grey)]"
    else
        battery="^fg($grey)[^fg($green)///^fg($grey)]"
    fi

    echo "$battery"

    sleep 30
done |

# Spawn Battery (dzen/bar)
dzen2 -title-name battery -p -geometry -$margin+25 -fn 'Source Code Pro:size=7' -ta c -w $width -h 40 -e 'onstart=lower' & disown
