#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# music
# Description: Displays panel showing information about mpd server
# -----------------------------------------------------------------------------
# Source:
#   onodera-punpun: https://github.com/onodera-punpun/dotfiles
# -----------------------------------------------------------------------------
# Requires:
#   mpd / mpc
#   xftwidth
#   dzen
# -----------------------------------------------------------------------------
# Useage:      $ sh ./music
# -----------------------------------------------------------------------------

# Define colors
color1=$( cat $HOME/.Xresources | grep color6 | tail -c 8 )
color2=$( cat $HOME/.Xresources | grep color3 | tail -c 8 )
color3=$( cat $HOME/.Xresources | grep color7 | tail -c 8 )

# Kill old music
pkill -f 'dzen2 -title-name music'*
sleep 0.1

# Calculate the width
current=$( mpc -f '[[%artist% - ][%title%][ - %album%]]' | head -n 1 )
count=$( xftwidth 'Source Code Pro:size=7' "${current}" )
width=$(( ${count} + 30 ))

# Vars
artist=$( mpc -f '[%artist% - ]' | head -n 1 )
title=$( mpc -f '[%title%]' | head -n 1 )
album=$( mpc -f '[ - %album%]' | head -n 1 )
music="^fg(${color1})${artist}^fg(${color2})${title}^fg(${color3})${album}"

empty=$( mpc current | cut -d $'\n' -f 1 )
if [[ -z "${empty}" ]]; then
    music="^fg(${color3})Playlist Empty"
    width=$(( $( xftwidth 'Source Code Pro:size=7' 'Playlist Empty' ) + 30 ))
fi

while 
    :
do
    new=$( mpc -f '[[%artist% - ][%title%][ - %album%]]' | head -n 1 )

    if [[ "${current}" != "${new}" ]]; then
        $HOME/.dotfiles/bin/panels/music &
        exit 0
    fi

    echo "${music}"

    mpc idle >/dev/null
done |

# Spawn Music (dzen/bar)
dzen2 -title-name music -p -geometry +50+25 -fn 'Source Code Pro:size=7' -ta c -w ${width} -h 40 -e 'onstart=lower' & disown
