# -----------------------------------------------------------------------------
# Description: Config file for unbound
# Location: /etc/unbound/unbound.conf
# -----------------------------------------------------------------------------

server:
  # use syslog instead of logfile
  use-syslog: yes
  # log verbosity (0: none)
  verbosity: 1

  # use unbound user
  username: "unbound"
  directory: "/etc/unbound"

  # number of threads to create. 1 disables threading. This should equal the number
  # of CPU cores in the machine.
  num-threads: 8

  # the time to live (TTL) value lower bound for RRsets and messages, in seconds.
  # If more than an hour could easily give trouble due to stale data.
  # Default 0.
  cache-min-ttl: 3600

  # the time to live (TTL) value upper bound for RRsets and messages, in secons.
  # Default 86400
  cache-max-ttl: 86400

  # perform prefetching of close to expired message cache entries.  If a client
  # requests the dns lookup and the TTL of the cached hostname is going to
  # expire in less than 10% of its TTL, unbound will (1st) return the ip of the
  # host to the client and (2nd) pre-fetch the dns request from the remote dns
  # server. This method has been shown to increase the amount of cached hits by
  # local clients by 10% on average.
  prefetch: yes

  # File with trusted keys, kept up to date using RFC5011 probes, initial file
  # like trust-anchor-file, then it stores metadata. If you use forward-zone
  # to query unsupported DNS servers (Google) you MUST comment out this
  # option or all DNS queries will fail.
  auto-trust-anchor-file: "/etc/unbound/trusted-key.key"

  # Read  the  root  hints from this file. The default may become outdated,
  # when servers change,  therefore  it is good practice to use a root-hints
  # file.  get one from ftp://FTP.INTERNIC.NET/domain/named.cache
  root-hints: "/etc/unbound/root.hints"

  # Unbound will use TLS only and never send DNS queries in the clear
  ssl-upstream: yes

  # Will trust glue only if it is within the servers authority.
  # Harden against out of zone rrsets, to avoid spoofing attempts.
  # Hardening queries multiple name servers for the same data to make
  # spoofing significantly harder and does not mandate dnssec.
  harden-glue: yes

  # Require DNSSEC data for trust-anchored zones, if such data is absent, the
  # zone becomes  bogus.  Harden against receiving dnssec-stripped data. If you
  # turn it off, failing to validate dnskey data for a trustanchor will trigger
  # insecure mode for that zone (like without a trustanchor).  Default on,
  # which insists on dnssec data for trust-anchored zones.
  harden-dnssec-stripped: yes

  # Use 0x20-encoded random bits in the query to foil spoof attempts.
  # http://tools.ietf.org/html/draft-vixie-dnsext-dns0x20-00
  # While upper and lower case letters are allowed in domain names, no significance
  # is attached to the case. That is, two names with the same spelling but
  # different case are to be treated as if identical. This means calomel.org is the
  # same as CaLoMeL.Org which is the same as CALOMEL.ORG.
  use-caps-for-id: yes

  # Should additional section of secure message also be kept clean of unsecure
  # data. Useful to shield the users of this validator from potential bogus
  # data in the additional section. All unsigned data in the additional section
  # is removed from secure messages.
  val-clean-additional: yes
forward-zone:
  name: "."
  # cloudflare
  forward-addr: 1.1.1.1@853
  forward-addr: 1.0.0.1@853
  forward-addr: 2606:4700:4700::1111@853
  forward-addr: 2606:4700:4700::1001@853
  # quad9
  forward-addr: 9.9.9.9@853
  forward-addr: 149.112.112.112@853
